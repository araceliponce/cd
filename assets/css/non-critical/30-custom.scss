@mixin devices ($breakpoint) {
  @if $breakpoint ==phone {
    @media only screen and (min-width: 600px) {
      @content;
    }
  }

  @if $breakpoint ==tablet {
    @media only screen and (min-width: 900px) {
      @content;
    }
  }

  @if $breakpoint ==desktop {
    @media only screen and (min-width: 1020px) {
      @content;
    }
  }

  @if $breakpoint ==sm {
    @media only screen and (min-width: 400px) {
      @content;
    }
  }

  @if $breakpoint ==md {
    @media only screen and (min-width: 768px) {
      @content;
    }
  }

  @if $breakpoint ==lg {
    @media only screen and (min-width: 1040px) {
      @content;
    }
  }
}


@mixin onLight {
  @media(prefers-color-scheme: light) {
    @content;
  }
}


body {
  font-variant-numeric: tabular-nums; //for animated counters
}

// +HERO
.hero {
  min-height: 60svh;
  display: grid;
  align-items: center;
  align-content: center;
}

.hero h2 {
  font-size: clamp(2rem, 10vw + 10px, 7rem);
  line-height: .8;
  letter-spacing: -.05em;
}

.hero em,
.hero .em {
  color: var(--accent);
  font-style: normal;
}

.cta {
  background-color: var(--accent);
  // color: var(--f);
  padding: 1.5rem;
  margin-block: 3rem;
  margin-inline: auto;
}



// +LAYOUT

.md-two-columns {
  &>*:nth-child(1) {
    background-color: var(--one);
  }

  &>*:nth-child(2) {
    background-color: var(--three);
  }

  @include devices (tablet) {
    grid-template-columns: 1fr 1fr;
  }
}



.ratio {
  overflow: hidden;
  aspect-ratio: 3/2;
  display: grid;
  place-content: center;
  object-fit: cover;
  margin-inline: auto;
}



.l-main {
  display: grid;
  gap: 1rem;
  padding-bottom: 2rem;
  position: relative;
  z-index: -1;

  @include devices(md) {
    grid-template-columns: 15rem 1fr;
  }

  @include devices(lg) {
    grid-template-columns: 20rem 1fr 13rem;
    // grid-template-columns: 1fr minmax(60%, 40ch) 1fr;
    grid-template-columns: 15rem minmax(60%, 40ch) 10rem;
    // https://developer.mozilla.org/en-US/docs/Web/CSS/minmax
  }
}


.main>* {
  padding-inline: 0.7rem;
}


.sidebar--left {

  display: grid; //para que el toc de adentro obtenga todo el width
  transition: all .2s ease;


  // grid-auto-flow: column;
  // max-height: 30vh;
  .calendar {
    display: none;
  }


  @include devices(md) {
    .calendar {
      display: grid;
    }

    position: sticky;
    top: 5.5rem;
    // display: flex;
    align-self: start;

    display: grid;
    grid-auto-flow: unset;

    // una altura para poder agregarle el scroll
    max-height: 100svh;
    overflow-y: auto;
    overscroll-behavior: contain;
    // https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior
  }
}




.toc {
  background-color: var(--green);
}


.content {
  overflow: hidden;
  max-width: 63ch;
}


.sidebar--right {
  grid-column: -1/1;
  // background-color: pink;

  @include devices(md) {
    grid-column: 2;
    // background-color: coral;
  }

  @include devices(lg) {
    grid-column: 3;

    // position: sticky;
    // top: 4rem;
    // align-self: start;
    // pero si tuviera mas contenido, no sticky
  }
}


.grid {
  display: grid;
}

.md-two-columns {
  gap: 1rem;

  @include devices(sm) {
    grid-template-columns: 1fr 1fr;
  }
}



.sidebar>*,
.post {
  padding: .7rem 1rem;
  border-radius: .5rem;
}


.read-more {
  text-decoration: none;
  display: block;
  background-color: var(--primary);
  // color: var(--text);
  color: white;
  border-radius: 0.3rem;
  margin-top: 0.5em;
  padding-inline: 0.5em;
  padding-block: 0.3em;
  text-align: center;

  &:hover {
    background-color: var(--orange);
    color: var(--text);
  }

  & svg {
    height: 1.3ex;
    display: inline-block;
    fill: currentColor
  }
}


.post.post-en-lista .read-more {
  // column-span: all;
}

.post.post-en-lista figure {
  display: grid;
  gap: 0.5em;
}

.post.soy-un-single-post {
  border-radius: 0;
  background-color: inherit;
  padding: 0;
  padding-bottom: 1rem;
}

.soy-un-single-post.post h1 {
  font-size: clamp(2.5rem, 3vw + 10px, 3rem);
  border-bottom: 1px solid currentColor;
}

.tabs a {
  border-radius: 0.25rem;
  padding-block: 0.5em;
  padding-inline: 0.7em;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}

.tabs {
  color: #a6aca3;
}

.tabs a:hover {
  color: #000;
}

.btn--glow {
  display: grid;
  place-items: center;
  grid-auto-flow: column;
  color: #000;
  background-color: var(--bg2);
  font-weight: bolder;
  padding: 0.5em 1em;
  position: relative;
  text-transform: uppercase;
  letter-spacing: 2px;
  border-radius: 45px;
  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.4s ease 0s;
  cursor: pointer;
  outline: none;
}

.btn--glow span {
  padding-right: 2px;
}

.btn--glow:focus-visible {
  transform: translateY(-0.2em);
  background-color: var(--fg3);
}

.btn--glow:hover {
  background-color: var(--fg3);
  box-shadow: 0px 10px 25px rgba(46, 229, 157, 0.4);
  color: #fff;
  transform: translateY(-0.2em);
}

.btn--glow:active,
.btn--glow:focus-visible {
  transform: translateY(-1px);
}

.btn--glow:hover::after {
  content: "";
  position: absolute;
  bottom: -4px;
  height: 4px;
  bottom: -0.2em;
  height: 0.2em;
  left: -0.3rem;
  right: -0.3rem;
}

.titleRegular {
  font-size: clamp(2rem, 4vw + 10px, 5rem);
  font-weight: lighter;
  padding-block: 0.2em;
}

.underlinedWrapper {
  position: relative;
  width: -moz-fit-content;
  width: fit-content;
}

.underlinedWrapper> :only-child::before {
  content: "";
  position: absolute;
  bottom: 0.5rem;
  left: 100%;
  width: 0;
  height: 0.2em;
  height: 0.03em;
  background: linear-gradient(270deg, white 0, brown 100%);
  transition: all 0.3s ease;
}

@media (hover: hover) {
  .underlinedWrapper:hover> :only-child::before {
    width: 100%;
    left: 0;
    transition:
      left 0s linear 0s,
      width 0.4s cubic-bezier(0.075, 0.82, 0.165, 1) 0s;
  }
}

.btn {
  display: grid;
  grid-auto-flow: column;
  place-content: center;
  place-items: center;
  width: -moz-fit-content;
  width: fit-content;
  gap: 1ex;
  border-radius: 0.3em;
  text-decoration: none;
  position: relative;
  padding-inline: 0.5em;
  height: 1.5em;
  isolation: isolate;
}

.btn i {
  font-size: 1em;
}

.btn svg {
  fill: currentColor;
  height: 1.3em;
}

.btn1::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  background-color: var(--purple2);
  border-radius: inherit;
  scale: 0 1;
  transition: scale 0.2s ease;
  transform-origin: right;
}

.btn1:hover::after,
.btn1:focus-visible::after {
  scale: 1 1;
  transform-origin: left;
}

.btn1:focus-visible::after {
  background-color: var(--purple1);
}

.not-btn1 {
  position: relative;
  display: grid;
}

.not-btn1::after {
  content: "";
  position: absolute;
  bottom: -0.3em;
  width: 100%;
  height: 0.2em;
  z-index: -1;
  background-color: var(--purple2);
  border-radius: inherit;
  scale: 0 1;
  transition: scale 0.2s ease;
  transform-origin: right;
}

.not-btn1:hover::after,
.not-btn1:focus-visible::after {
  scale: 1 1;
  transform-origin: left;
}









// +ARROWS V2

.absolute--right {
  display: none;
}

@media (hover:hover) {

  .absolute--right {
    position: absolute;
    right: 0;
    top: 0;
    display: flex;

    gap: .3rem;

    & button {
      width: 3rem;
      height: 2.5rem;
      border-radius: .3rem;
      display: grid;
      place-content: center;
    }


  }

  .arrow--left {
    transform: rotate(180deg);
  }

}




// +RAINBOW BORDERED
:root {
  --bg: hsl(0 0% 0%);
  --border-width: .5rem;
  --border-radius: 1rem;
  --gradient: conic-gradient(from 180deg at 50% 70%, hsla(0, 0%, 98%, 1) 0deg, #eec32d 72.0000010728836deg, #ec4b4b 144.0000021457672deg, #709ab9 216.00000858306885deg, #4dffbf 288.0000042915344deg, hsla(0, 0%, 98%, 1) 1turn)
}



.rainbow-bordered {
  color: hsl(0 0% 92%);
  background:
    linear-gradient(var(--bg), var(--bg)) padding-box,
    var(--gradient) border-box;
  border: var(--border-width) solid transparent;
  padding: 2rem;
  border-radius: var(--border-radius);
  position: relative;
  transform: translate3d(0, 0, 0);
}




.o-hidden {
  overflow: hidden;
}


// +PADDINGS MARGINS

// Loop for padding classes
@for $i from 0 through 5 {
  .p-#{$i} {
    padding: #{$i}rem;
  }
}

// Loop for padding-top classes
@for $i from 0 through 5 {
  .pt-#{$i} {
    padding-top: #{$i}rem;
  }
}

// Loop for padding-bottom classes
@for $i from 0 through 5 {
  .pb-#{$i} {
    padding-bottom: #{$i}rem;
  }
}

// Loop for padding-left and padding-right classes
@for $i from 0 through 5 {
  .px-#{$i} {
    padding-left: #{$i}rem;
    padding-right: #{$i}rem;
  }
}

@for $i from 0 through 5 {
  .py-#{$i} {
    padding-top: #{$i}rem;
    padding-bottom: #{$i}rem;
  }
}

@for $i from 0 through 10 {
  .mt-#{$i} {
    margin-top: #{$i}rem;
  }
}

@for $i from 0 through 5 {
  .mb-#{$i} {
    margin-bottom: #{$i}rem;
  }
}

@for $i from 0 through 5 {
  .mx-#{$i} {
    margin-left: #{$i}rem;
    margin-right: #{$i}rem;
  }
}

@for $i from 0 through 5 {
  .my-#{$i} {
    margin-top: #{$i}rem;
    margin-bottom: #{$i}rem;
  }
}

@for $i from 0 through 5 {
  .gap-#{$i} {
    --gap: #{$i}rem;
  }
}